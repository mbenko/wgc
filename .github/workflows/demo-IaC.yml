name: Demo-IaC
on:
  workflow_dispatch:
    inputs:
      appName:
        required: true
        default: 'vsl22'
        description: Name of Application 

run-name: Demo-IAC ARM - ${{github.event.inputs.appName}}

env:
  APP_NAME: "${{github.event.inputs.appName}}"
  RG_NAME: "${{github.event.inputs.appName}}-demos-rg"
  SITE_NAME: "${{github.event.inputs.appName}}-arm-site"
  AZURE_WEBAPP_PACKAGE_PATH: vslApp/published
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 7.0.x
  WORKING_DIRECTORY: vslApp

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.8.0
      with:
        include-prerelease: True
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    - name: Restore
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}"
    - name: Build
      run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore
    - name: Test
      run: dotnet test "${{ env.WORKING_DIRECTORY }}" --no-build
    - name: Publish
      run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"
    - name: Publish Artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy-arm:
    runs-on: ubuntu-latest
    steps:
    
    # Checkout Code
    - uses: actions/checkout@v2
    
      # Log into Azure
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.VSL22_DEMOS_SPN }}
    
    - name: Create ARM RG
      uses: azure/cli@v1
      with:
        inlineScript: |
          az group create --name ${{env.APP_NAME}}-arm-rg --location centralus

    # - uses: azure/arm-deploy@v1
    #   name: Deploy ARM
    #   with:
    #     resourceGroupName: ${{ env.APP_NAME }}-arm-rg
    #     template: ./infra/ARM/mySite.json
    #     parameters: appName=${{github.event.inputs.appName}} envName=ARM color=lightgreen
    
    - name: Deploy Bicep
      uses: azure/arm-deploy@v1
      with:
        template: ./infra/ARM/main.bicep
        parameters: appName=${{github.event.inputs.appName}} color=lightblue
        scope: subscription
        region: centralus

  deploy-terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra/TF
    steps:
    
    # Checkout Code
    - uses: actions/checkout@v2
    
    # Log into Azure
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.VSL22_DEMOS_SPN }}

    - name: Connect TF to Azure
      uses: Azure/cli@v1
      with:
        inlineScript: | 
          echo "ARM_SUBSCRIPTION_ID=$(az account show --query="id" -o tsv)" >> $GITHUB_ENV
          echo "ARM_CLIENT_ID=$(az account show --query="user.name" -o tsv)" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$(jq '.clientSecret' -r <<< '${{ secrets.VSL22_DEMOS_SPN }}')" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=$(az account show --query="tenantId" -o tsv)" >> $GITHUB_ENV    

    # setup TF
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Init TF
      run: terraform init -backend-config="backend.tfvars"

    - name: Terraform Plan
      id: plan
      # run: terraform plan -out=tfplan 
      run: terraform plan -out=${{github.workspace}}/myDemo.plan -var appName=${{env.APP_NAME}} -var envName=tf


    - name: Terraform Apply
      id: Apply
      # run: terraform apply -auto-approve 
      run: terraform apply -auto-approve ${{github.workspace}}/myDemo.plan

  deploy-webapp-arm:
    runs-on: ubuntu-latest
    needs: [build, deploy-arm, deploy-terraform]
    steps:
      # Checkout Code
      - uses: actions/checkout@v2

      - uses: ./.github/workflows/composite/myDeployWebApp
        id: arm-deploy
        with:
          app-name: ${{ env.APP_NAME }}-arm-site
          rg-name: ${{env.APP_NAME}}-arm-outpurg
          webapp-package: vslApp/published
          credentials: ${{ secrets.VSL22_DEMOS_SPN }}

  deploy-webapp-bicep:
    runs-on: ubuntu-latest
    needs: [build, deploy-arm, deploy-terraform]
    steps:
      - uses: ./.github/workflows/composite/myDeployWebApp
        id: bicep-deploy
        with:
          app-name: ${{ env.APP_NAME }}-bicep-site
          rg-name: ${{env.APP_NAME}}-bicep-rg
          webapp-package: vslApp/published
          credentials: ${{ secrets.VSL22_DEMOS_SPN }}

  deploy-webapp-tf:
    runs-on: ubuntu-latest
    needs: [build, deploy-terraform]
    steps:
      - uses: ./.github/workflows/composite/myDeployWebApp
        id: tf-deploy
        with:
          app-name: ${{ env.APP_NAME }}-tf-site
          rg-name: ${{env.APP_NAME}}-tf-rg
          webapp-package: vslApp/published
          credentials: ${{ secrets.VSL22_DEMOS_SPN }}


  #   - uses: aliencube/publish-profile-actions@v1
  #     id: publishprofile
  #     env:
  #       AZURE_CREDENTIALS: ${{secrets.VSL22_DEMOS_SPN}}
  #     with:
  #       resourceGroupName: ${{env.RG_NAME}}
  #       appName: ${{env.APP_NAME}}-arm-site    

  #   - name: Deploy to Azure WebApp
  #     uses: azure/webapps-deploy@v2
  #     with:
  #       app-name: ${{ env.APP_NAME }}-arm-site
  #       package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
  #       publish-profile: ${{steps.publishprofile.outputs.profile}}

  #   - uses: aliencube/publish-profile-actions@v1
  #     name: Reset publishprofile
  #     env:
  #       AZURE_CREDENTIALS: ${{secrets.VSL22_DEMOS_SPN}}
  #     with:
  #       resourceGroupName: ${{env.RG_NAME}}
  #       appName: ${{env.APP_NAME}}-arm-site    
  #       reset: true
